BACKEND_PUBLIC_URL='http://127.0.0.1:8000'
FRONTEND_PUBLIC_URL='http://127.0.0.1:3000'

FRONTEND_PORT='3000'
NODE_ENV='development'

# NOTE: in render you need to set PORT to 8000 on the backend web_service
BACKEND_PORT='8000'
DJANGO_SETTINGS_MODULE='api_crud.settings.dev'
BACKEND_SECRET_KEY='asdfkjewn5xjh22'

POSTGRES_USER='postgres'
POSTGRES_PASSWORD='password'
POSTGRES_PORT=5432
POSTGRES_HOST='db'
POSTGRES_DB="postgres"

# naming convertion of the above vars but for the db container
PGUSER='postgres'
PGPASSWORD='password'
PGPORT=5432
PGDATABASE="postgres"
# NOTE: change PGDATA with CAUTION
PGDATA="/var/lib/postgresql/data/"
PGDBLOCAL="/tmp/django-react-postgres-data"

BEAT_MI_WORKER_TYPE="celery-beat-worker"
BEAT_MI_WORKER_OPTIONS="-B --scheduler django_celery_beat.schedulers:DatabaseScheduler"
BEAT_CELERY_WORKER_QUEUES="crud_api_scheduled_task_queue,crud_api_default_queue"

DATA_MI_WORKER_TYPE="celery-data-worker"
DATA_CELERY_WORKER_QUEUES="mint_partner1_queue,mint_partner2_queue,mint_default_queue"

MQ_URL="amqp://guest:guest@mq"
MQ_API_URL="http://mq:15672/api"
HL_REDIS_HOST="redis"
# HL_REDIS_USERNAME="redisusername"
HL_REDIS_PORT=6379
# HL_REDIS_PASSWORD="redispassword"
HL_REDIS_SSL_ENABLED="false"
CRUD_API_WORKER_ENABLED="true"
CRUD_API_DEBUG="true"

DJANGO_ENV="dev"
PROJECT_ENV="local"

DEV_EMAIL_ALERT_RECEIVER="devteam@fake_domaintodo.net"
CS_EMAIL_ALERT_RECEIVER="support@fake_domaintodo.net"

# TODO: in the docker compose. add platform tag under each service that supports using the LOCAL_SYSTEM_ARCH
# LOCAL_SYSTEM_ARCH="linux/amd64"; # standard chip
# LOCAL_SYSTEM_ARCH="linux/arm64"; # mac m chips

PGADMIN_DEFAULT_EMAIL="user@domain.com"
PGADMIN_DEFAULT_PASSWORD="password"
PGADMIN_EXTERNAL_PORT=8080
PGADMIN_INTERNAL_PORT=80
PGADMIN_LOCAL="/tmp/django-react-pgadmin"
